#!/bin/bash 
#===============================================================================
#
#          FILE: .bash_vars.sh
#
#         USAGE: ./.bash_vars.sh
#
#   DESCRIPTION: this is a file that contains default environmental variables that i use to shortcut things like path navigation e.t.c
#                    as well as functions that i use to automate things like setting up a project and other trivial stuffs
#
#
#       OPTIONS: ---
#  REQUIREMENTS: ---
#          BUGS: ---
#         NOTES: ---
#        AUTHOR: Olalekan Adebari
#  ORGANIZATION:
#       CREATED: 27/05/2019 10:23
#      REVISION:  ---
#===============================================================================

#set -o nounset                              # Treat unset variables as an error


export DW=~/Downloads
export WP=~/Documents/workspace
export INT=~/Documents/workspace/ubanquity/integration-project/integration
export INT3=/home/lekan/Documents/workspace/ubanquity/integration-project-python-3/integration
export GOWORK=$GOPATH/src/
export REX=~/Documents/account_rex/account-REX
export PY3=~/Documents/workspace/python3/
export PY2=~/Documents/workspace/python2/
export UMLET_HOME=~/bin/Umlet


# this function basically runs python projects and creates environment on the fly if it doesnt yet exist. it will also opens vscode or a text editor
# that is specified in $EDITOR

py() {
    PROJ=$1
    if [[ $EDITOR == "" ]] ; then
        EDITOR='code'
    fi

    if [ -d $PROJ ] ; then
        cd $PROJ
        if [[ $(ls ../ | grep bin)  == "bin" ]] ; then

            echo "Sourcing and activating your environment"
            source ../bin/activate
            echo "opening virtual studio code for your convenience"
            eval $EDITOR .
            elif [[  $( ls | grep bin) == "bin" ]] ; then
            echo "Sourcing and activating your environment, but your environment and your project are on the same folder"
            source bin/activate
            echo "opening virtual studio code for your convenience"
            eval $EDITOR .
            elif [[ $( ls | grep "bin") != "bin" || -d $PROJ && $(ls ../ | grep bin) == "bin"  ]] ; then

            echo "$PROJ does not have a virtual environment created"
            echo " would you like to create it ?. y/n"
            read ANS
            if [ $ANS == "y" ]; then
                echo "would you prefer python 3 or 2 enter the number please."
                read PYVERSION
                if [[ $PYVERSION == "2" || $PYVERSION == "3" ]] ;  then
                    if [ $( dpkg -l | grep virtualenv | awk '{print$2}' | grep ^virtualenv) == "virtualenv" ]; then
                        echo "creating a virtual environment for your project with python version $PYVERSION \\n and the current directory name as the environment name"
                        ENV_NAME="$( pwd | tr / \\t | awk '{print $(NF)}')_env"
                        ENV_INTERMEDIATE_DIR=..
                        ENV_DIR=$ENV_INTERMEDIATE_DIR/$ENV_NAME
                        cd $ENV_INTERMEDIATE_DIR
                        virtualenv -p "python$PYVERSION" $ENV_NAME
                        mv $PROJ $ENV_NAME
                        cd $ENV_NAME
                        source bin/activate
                        eval $EDITOR .
                    else
                        echo "virtualenv is not installed, kindly install with appropriate package manager and retry "
                    fi
                else
                    echo "wrong python version : $PYVERSION"
                fi
            else
                echo "thanks, we shall open your code with visual code"
            fi
        else
            echo "the paths passed is not a directory"
        fi
    else
        echo "the paths passed is not a directory"
    fi

}
